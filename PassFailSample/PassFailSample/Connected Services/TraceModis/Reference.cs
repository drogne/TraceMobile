//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PassFailSample.TraceModis {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TraceModis.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ProcessBarCode", ReplyAction="http://tempuri.org/IService1/ProcessBarCodeResponse")]
        System.IAsyncResult BeginProcessBarCode(string OrderNumber, string BarCode, System.Collections.ObjectModel.ObservableCollection<string> Parameters, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndProcessBarCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetEmployeeOid", ReplyAction="http://tempuri.org/IService1/GetEmployeeOidResponse")]
        System.IAsyncResult BeginGetEmployeeOid(string EmployeeNumber, System.AsyncCallback callback, object asyncState);
        
        System.Guid EndGetEmployeeOid(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PassFailSample.TraceModis.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeOidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeOidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Guid Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PassFailSample.TraceModis.IService1>, PassFailSample.TraceModis.IService1 {
        
        private BeginOperationDelegate onBeginProcessBarCodeDelegate;
        
        private EndOperationDelegate onEndProcessBarCodeDelegate;
        
        private System.Threading.SendOrPostCallback onProcessBarCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeOidDelegate;
        
        private EndOperationDelegate onEndGetEmployeeOidDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeOidCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress()) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ProcessBarCodeCompletedEventArgs> ProcessBarCodeCompleted;
        
        public event System.EventHandler<GetEmployeeOidCompletedEventArgs> GetEmployeeOidCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PassFailSample.TraceModis.IService1.BeginProcessBarCode(string OrderNumber, string BarCode, System.Collections.ObjectModel.ObservableCollection<string> Parameters, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessBarCode(OrderNumber, BarCode, Parameters, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> PassFailSample.TraceModis.IService1.EndProcessBarCode(System.IAsyncResult result) {
            return base.Channel.EndProcessBarCode(result);
        }
        
        private System.IAsyncResult OnBeginProcessBarCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string OrderNumber = ((string)(inValues[0]));
            string BarCode = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> Parameters = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            return ((PassFailSample.TraceModis.IService1)(this)).BeginProcessBarCode(OrderNumber, BarCode, Parameters, callback, asyncState);
        }
        
        private object[] OnEndProcessBarCode(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((PassFailSample.TraceModis.IService1)(this)).EndProcessBarCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessBarCodeCompleted(object state) {
            if ((this.ProcessBarCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessBarCodeCompleted(this, new ProcessBarCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessBarCodeAsync(string OrderNumber, string BarCode, System.Collections.ObjectModel.ObservableCollection<string> Parameters) {
            this.ProcessBarCodeAsync(OrderNumber, BarCode, Parameters, null);
        }
        
        public void ProcessBarCodeAsync(string OrderNumber, string BarCode, System.Collections.ObjectModel.ObservableCollection<string> Parameters, object userState) {
            if ((this.onBeginProcessBarCodeDelegate == null)) {
                this.onBeginProcessBarCodeDelegate = new BeginOperationDelegate(this.OnBeginProcessBarCode);
            }
            if ((this.onEndProcessBarCodeDelegate == null)) {
                this.onEndProcessBarCodeDelegate = new EndOperationDelegate(this.OnEndProcessBarCode);
            }
            if ((this.onProcessBarCodeCompletedDelegate == null)) {
                this.onProcessBarCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessBarCodeCompleted);
            }
            base.InvokeAsync(this.onBeginProcessBarCodeDelegate, new object[] {
                        OrderNumber,
                        BarCode,
                        Parameters}, this.onEndProcessBarCodeDelegate, this.onProcessBarCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PassFailSample.TraceModis.IService1.BeginGetEmployeeOid(string EmployeeNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployeeOid(EmployeeNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Guid PassFailSample.TraceModis.IService1.EndGetEmployeeOid(System.IAsyncResult result) {
            return base.Channel.EndGetEmployeeOid(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployeeOid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EmployeeNumber = ((string)(inValues[0]));
            return ((PassFailSample.TraceModis.IService1)(this)).BeginGetEmployeeOid(EmployeeNumber, callback, asyncState);
        }
        
        private object[] OnEndGetEmployeeOid(System.IAsyncResult result) {
            System.Guid retVal = ((PassFailSample.TraceModis.IService1)(this)).EndGetEmployeeOid(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeOidCompleted(object state) {
            if ((this.GetEmployeeOidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeOidCompleted(this, new GetEmployeeOidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeOidAsync(string EmployeeNumber) {
            this.GetEmployeeOidAsync(EmployeeNumber, null);
        }
        
        public void GetEmployeeOidAsync(string EmployeeNumber, object userState) {
            if ((this.onBeginGetEmployeeOidDelegate == null)) {
                this.onBeginGetEmployeeOidDelegate = new BeginOperationDelegate(this.OnBeginGetEmployeeOid);
            }
            if ((this.onEndGetEmployeeOidDelegate == null)) {
                this.onEndGetEmployeeOidDelegate = new EndOperationDelegate(this.OnEndGetEmployeeOid);
            }
            if ((this.onGetEmployeeOidCompletedDelegate == null)) {
                this.onGetEmployeeOidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeOidCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeOidDelegate, new object[] {
                        EmployeeNumber}, this.onEndGetEmployeeOidDelegate, this.onGetEmployeeOidCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PassFailSample.TraceModis.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://146.47.20.56/MODISWCF/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private class Service1ClientChannel : ChannelBase<PassFailSample.TraceModis.IService1>, PassFailSample.TraceModis.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<PassFailSample.TraceModis.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginProcessBarCode(string OrderNumber, string BarCode, System.Collections.ObjectModel.ObservableCollection<string> Parameters, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = OrderNumber;
                _args[1] = BarCode;
                _args[2] = Parameters;
                System.IAsyncResult _result = base.BeginInvoke("ProcessBarCode", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndProcessBarCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("ProcessBarCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployeeOid(string EmployeeNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = EmployeeNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetEmployeeOid", _args, callback, asyncState);
                return _result;
            }
            
            public System.Guid EndGetEmployeeOid(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Guid _result = ((System.Guid)(base.EndInvoke("GetEmployeeOid", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService1,
        }
    }
}
